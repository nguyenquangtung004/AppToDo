name: app_to_do
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.5.4

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

  #Database
  # - hive : Một database NoSQL nhẹ và nhanh dành cho Flutter,
  #phù hợp cho việc lưu trữ dữ liệu nhỏ như cài đặt người dùng,
  #danh sách công việc, hay cache.

  # - hive_flutter : Bổ sung tích hợp với Flutter để sử dụng Hive dễ dàng hơn,
  #chẳng hạn như lưu trữ trên các thiết bị di động
  hive: ^2.2.3
  hive_flutter: ^1.1.0

  #Generate RFC4122
  #-uuid : Thư viện giúp tạo mã nhận dạng duy nhất (UUID) theo chuẩn RFC4122.
  #Thường được sử dụng để tạo các ID không trùng lặp trong ứng dụng,
  #chẳng hạn như ID cho người dùng, đơn hàng, hoặc tài nguyên.
  uuid: ^3.0.7

  #Provider internationalization and localization facilities
  #- intl : Cung cấp các tiện ích để quốc tế hóa và địa phương hóa ứng dụng.
  #Bao gồm định dạng ngày, giờ, số, tiền tệ, và dịch văn bản theo ngôn ngữ của người dùng
  intl:  any

  #Animation
  # - animate_do : Thư viện giúp thêm hiệu ứng hoạt hình cho các widget trong Flutter.
  #Các hiệu ứng phổ biến bao gồm fade, bounce, slide,
  #hoặc zoom, giúp giao diện ứng dụng sinh động hơn.
  animate_do: ^3.3.4

  #Dialogs
  # - panara_dialogs : Cung cấp các loại hộp thoại (dialogs) đẹp mắt và tiện dụng.
  #Có các kiểu như xác nhận (confirmation), thông báo lỗi (error), hoặc nhắc nhở (reminder).
  panara_dialogs: ^0.1.5

  #Animations exported as json
  # - lottie : Cho phép hiển thị các hoạt ảnh JSON được tạo từ Adobe After Effects thông qua Lottie.
  #Các hoạt ảnh thường rất nhẹ, mượt mà, và phù hợp với giao diện người dùng hiện đại.
  lottie: ^3.1.3

  #Toast
  # - ftoast : Thư viện hiển thị thông báo ngắn gọn (toast) trong ứng dụng Flutter.
  #Bạn có thể tùy chỉnh giao diện và vị trí của các thông báo này.
  ftoast: ^2.0.0

  #Slider
  # - flutter_slider_drawer : Một thư viện tạo thanh trượt (slider drawer) ở các vị trí bên trái hoặc phải màn hình.
  #Thường được dùng để xây dựng menu điều hướng dạng trượt.
  flutter_slider_drawer: ^2.1.3

  #Date Picker
  # - flutter_cupertino_date_picker_fork : Thư viện cung cấp giao diện chọn ngày theo phong cách iOS Cupertino.
  #Tích hợp các tùy chọn như chọn ngày, giờ, hoặc cả ngày và giờ.
  flutter_cupertino_date_picker_fork: ^1.0.7


dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.4.13
  hive_generator: ^2.0.1

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^4.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  assets:
    - assets/images/1.png
    - assets/lottie/1.json

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
